{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started Basics Stift's API is RESTful and uses standard HTTP response codes, authentication, and verbs. You can use your favorite HTTP/REST library that is available for your programming language to make HTTP calls. You must send JSON payloads in your requests and expect to get JSON responses. Don't forget to add these headers to each and every request. Content-Type: application/json Accept: application/json Use the following base URL for all API endpoints: https://api.stift.com.br/v1/ Authentication API Keys API keys are a quick way to implement machine-to-machine authentication without any direct inputs from a human beyond initial setup. You can get an API key by contacting us through our official channels. Once the key is generated, please copy and store it immediately and don't publish it anywhere public. Treat it as you would a password, as it gives access to all resources inside your account. Once you have your API key, provide it in an Authorization header together with your request payload, where XXX is your token: Authorization: Bearer XXX If you fail to provide a valid token, you'll get this response on all requests. Response Code: 401 Unauthorized { \"error\" : { \"code\" : 401 , \"message\" : \"Unauthorized.\" } } Errors You might encounter validation errors when sending requests to API endpoints. They will come in the following format: Response Code: 400 Bad Request { \"error\" : { \"code\" : 400 , \"message\" : \"Invalid school id.\" } }","title":"Getting started"},{"location":"#getting-started","text":"","title":"Getting started"},{"location":"#basics","text":"Stift's API is RESTful and uses standard HTTP response codes, authentication, and verbs. You can use your favorite HTTP/REST library that is available for your programming language to make HTTP calls. You must send JSON payloads in your requests and expect to get JSON responses. Don't forget to add these headers to each and every request. Content-Type: application/json Accept: application/json Use the following base URL for all API endpoints: https://api.stift.com.br/v1/","title":"Basics"},{"location":"#authentication","text":"","title":"Authentication"},{"location":"#api-keys","text":"API keys are a quick way to implement machine-to-machine authentication without any direct inputs from a human beyond initial setup. You can get an API key by contacting us through our official channels. Once the key is generated, please copy and store it immediately and don't publish it anywhere public. Treat it as you would a password, as it gives access to all resources inside your account. Once you have your API key, provide it in an Authorization header together with your request payload, where XXX is your token: Authorization: Bearer XXX If you fail to provide a valid token, you'll get this response on all requests. Response Code: 401 Unauthorized { \"error\" : { \"code\" : 401 , \"message\" : \"Unauthorized.\" } }","title":"API Keys"},{"location":"#errors","text":"You might encounter validation errors when sending requests to API endpoints. They will come in the following format: Response Code: 400 Bad Request { \"error\" : { \"code\" : 400 , \"message\" : \"Invalid school id.\" } }","title":"Errors"},{"location":"users/","text":"Users Users are the central part of the application. They can be created, edited and deleted. They can also be assigned to groups and roles. Roles Roles determine what a user can do in the application. They are defined by a name and a set of permissions. STUDENT : Can only access the student's app and view their own data. TEACHER : Can only access the teacher's app, answer questions from the groups they are part of and view their own data. GROUP_ADMIN : Can only access the group admin's app and view their all data from the groups they are part of. Groups Groups are the way to organize users, as in classes. Once users are inside a group, they can only see the data that is related to that group. A user can be in multiple groups at a time. GroupData The GroupData object is used to save information about the relation of a user with a group. It's primary use is the amount of remaining_questions a user has in a group. The value of remaining_questions is the amount of questions a user can send to a group. To allow a user to send unlimited questions in a group, set remaining_questions to -1. GroupData { \"group\" : { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" }, \"remaining_questions\" : -1 } Create a user If you want to create a new user, send this POST request: POST /users Request Parameters Parameter Location Type Description Required first_name Body string User's first name (John) Yes last_name Body string User's last name (Doe) Yes email Body string User's email Yes phone Body string User's phone number (+5548991234567) No birth_date Body string User's birth date (2002-11-28) No location Body string The closest known location to the user (Brazil) Yes gender Body string Use MASCULINE, FEMININE or OTHER as accepted values Yes type Body string Use STUDENT, TEACHER or GROUP_ADMIN as accepted values Yes group_ids Body array List of the group ids the user should be part of Yes groups_data Body array List of GroupData objects Yes password Body string The user's password. Minimum length is 8 Yes Example { \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john.doe@stift.com.br\" , \"location\" : \"Santa Catarina, Brasil\" , \"gender\" : \"MASCULINE\" , \"type\" : \"STUDENT\" , \"group_ids\" : [ \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" ], \"groups_data\" : [ { \"group\" : { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" }, \"remaining_questions\" : -1 } ], \"password\" : \"12345678\" } Response Status Code Description 201 The user was successfully created. 400 Some parameter must be malformed or missing. Check the response for more. 401 Unauthorized. Example { \"id\" : \"d7e595ef-cdfa-406c-81af-227fde165309\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john.doe@stift.com.br\" , \"phone\" : null , \"location\" : \"Santa Catarina, Brasil\" , \"gender\" : \"MASCULINE\" , \"birth_date\" : null , \"type\" : \"STUDENT\" , \"groups\" : [ { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" , \"name\" : \"Class 1\" , \"school\" : { \"id\" : \"5207bb23-27df-45d8-9dc9-767c8a65640b\" } } ], \"groups_data\" : [ { \"group\" : { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" }, \"remaining_questions\" : -1 } ], \"password\" : \"12345678\" , \"created_at\" : \"2022-12-05T08:37:41.811Z\" }","title":"Users"},{"location":"users/#users","text":"Users are the central part of the application. They can be created, edited and deleted. They can also be assigned to groups and roles.","title":"Users"},{"location":"users/#roles","text":"Roles determine what a user can do in the application. They are defined by a name and a set of permissions. STUDENT : Can only access the student's app and view their own data. TEACHER : Can only access the teacher's app, answer questions from the groups they are part of and view their own data. GROUP_ADMIN : Can only access the group admin's app and view their all data from the groups they are part of.","title":"Roles"},{"location":"users/#groups","text":"Groups are the way to organize users, as in classes. Once users are inside a group, they can only see the data that is related to that group. A user can be in multiple groups at a time.","title":"Groups"},{"location":"users/#groupdata","text":"The GroupData object is used to save information about the relation of a user with a group. It's primary use is the amount of remaining_questions a user has in a group. The value of remaining_questions is the amount of questions a user can send to a group. To allow a user to send unlimited questions in a group, set remaining_questions to -1. GroupData { \"group\" : { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" }, \"remaining_questions\" : -1 }","title":"GroupData"},{"location":"users/#create-a-user","text":"If you want to create a new user, send this POST request: POST /users","title":"Create a user"},{"location":"users/#request","text":"","title":"Request"},{"location":"users/#parameters","text":"Parameter Location Type Description Required first_name Body string User's first name (John) Yes last_name Body string User's last name (Doe) Yes email Body string User's email Yes phone Body string User's phone number (+5548991234567) No birth_date Body string User's birth date (2002-11-28) No location Body string The closest known location to the user (Brazil) Yes gender Body string Use MASCULINE, FEMININE or OTHER as accepted values Yes type Body string Use STUDENT, TEACHER or GROUP_ADMIN as accepted values Yes group_ids Body array List of the group ids the user should be part of Yes groups_data Body array List of GroupData objects Yes password Body string The user's password. Minimum length is 8 Yes","title":"Parameters"},{"location":"users/#example","text":"{ \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john.doe@stift.com.br\" , \"location\" : \"Santa Catarina, Brasil\" , \"gender\" : \"MASCULINE\" , \"type\" : \"STUDENT\" , \"group_ids\" : [ \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" ], \"groups_data\" : [ { \"group\" : { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" }, \"remaining_questions\" : -1 } ], \"password\" : \"12345678\" }","title":"Example"},{"location":"users/#response","text":"","title":"Response"},{"location":"users/#status","text":"Code Description 201 The user was successfully created. 400 Some parameter must be malformed or missing. Check the response for more. 401 Unauthorized.","title":"Status"},{"location":"users/#example_1","text":"{ \"id\" : \"d7e595ef-cdfa-406c-81af-227fde165309\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john.doe@stift.com.br\" , \"phone\" : null , \"location\" : \"Santa Catarina, Brasil\" , \"gender\" : \"MASCULINE\" , \"birth_date\" : null , \"type\" : \"STUDENT\" , \"groups\" : [ { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" , \"name\" : \"Class 1\" , \"school\" : { \"id\" : \"5207bb23-27df-45d8-9dc9-767c8a65640b\" } } ], \"groups_data\" : [ { \"group\" : { \"id\" : \"bee1b51e-1843-443b-8bd2-9c46c86373c5\" }, \"remaining_questions\" : -1 } ], \"password\" : \"12345678\" , \"created_at\" : \"2022-12-05T08:37:41.811Z\" }","title":"Example"}]}